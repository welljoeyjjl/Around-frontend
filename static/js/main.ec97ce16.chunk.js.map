{"version":3,"sources":["assets/images/logo.svg","assets/images/blue-marker.svg","components/TopBar.js","constants.js","components/Register.js","components/Login.js","components/Gallery.js","components/CreatePostForm.js","components/CreatePostButton.js","components/AroundMarker.js","components/AroundMap.js","components/Home.js","components/Main.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","TopBar","_React$Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","react_default","a","createElement","className","src","logo","alt","props","isLoggedIn","onClick","handleLogout","es_icon","type","React","Component","API_ROOT","TOKEN_KEY","GEO_OPTIONS","enableHighAccuracy","maximumAge","timeout","POS_KEY","AUTH_HEADER","LOC_SHAKE","FormItem","Form","Item","RegistrationForm","state","confirmDirty","autoCompleteResult","handleSubmit","e","preventDefault","_this","form","validateFieldsAndScroll","err","values","fetch","concat","method","body","JSON","stringify","username","password","then","response","ok","Error","statusText","text","console","log","message","success","history","push","catch","error","handleConfirmBlur","target","setState","compareToFirstPassword","rule","callback","getFieldValue","validateToNextPassword","validateFields","force","getFieldDecorator","formItemLayout","labelCol","xs","span","sm","wrapperCol","es_form","onSubmit","assign","label","rules","required","whitespace","input","validator","onBlur","offset","es_button","htmlType","react_router_dom","to","Register","create","NormalLoginForm","data","handleLogin","Login_FormItem","prefix","style","color","placeholder","Login","Gallery","_Component","images","map","image","objectSpread","customOverlay","captionStyle","user","caption","wrapperStyle","Gallery_default","backdropClosesModal","enableImageSelection","display","minHeight","width","border","overflow","backgroundColor","maxHeight","position","bottom","padding","fontSize","NormalCreatePostForm","normFile","Array","isArray","fileList","beforeUpload","CreatePostForm_FormItem","valuePropName","getValueFromEvent","upload","Dragger","name","CreatePostForm","CreatePostButton","_getPrototypeOf2","_len","length","args","_key","call","ModalText","visible","confirmLoading","showModal","handleOk","_JSON$parse","parse","localStorage","getItem","lat","lon","token","formData","FormData","set","Math","random","originFileObj","headers","Authorization","resetFields","loadNearbyPosts","handleCancel","saveFormRef","formInstance","_this$state","modal","title","onOk","okText","onCancel","ref","AroundMarker","isOpen","toggleOpen","prevState","_this$props$post","post","url","location","lng","isImagePost","icon","undefined","blueMarkerUrl","scaledSize","window","google","maps","Size","lib","onMouseOver","onMouseOut","onCloseClick","controls","NormalAroundMap","reloadMarkers","center","getCenter","radius","getRadius","topic","loadFacesAroundTheWorld","bounds","getBounds","ne","getNorthEast","right","LatLng","geometry","spherical","computeDistanceBetween","getMapRef","mapInstance","defaultZoom","defaultCenter","onDragEnd","onZoomChanged","posts","AroundMarker_AroundMarker","AroundMap","withScriptjs","withGoogleMap","TabPane","Tabs","RadioGroup","Radio","Group","Home","isLoadingGeoLocation","isLoadingPosts","onSuccessLoadGeoLocation","_position$coords","coords","latitude","longitude","setItem","onFailedLoadGeoLocation","_ref","range","json","getPanelContent","spin","tip","getImagePosts","getVideoPosts","row","gutter","filter","col","thumbnail","thumbnailWidth","thumbnailHeight","Gallery_Gallery","onTopicChange","navigator","geolocation","getCurrentPosition","operations","CreatePostButton_CreatePostButton","onChange","es_radio","tabs","tabBarExtraContent","tab","googleMapURL","loadingElement","height","containerElement","mapElement","Main","getHome","Home_Home","react_router","getLogin","exact","path","render","component","App","Boolean","removeItem","TopBar_TopBar","Main_Main","hostname","match","ReactDOM","components_App","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ec97ce16.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","module.exports = __webpack_public_path__ + \"static/media/blue-marker.f712dac3.svg\";","import React from 'react';\r\nimport { Icon } from 'antd';\r\nimport logo from '../assets/images/logo.svg';\r\n\r\nexport class TopBar extends React.Component {\r\n    render() {\r\n        return (\r\n            <header className=\"App-header\">\r\n                <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n                <div className=\"App-title\">Around</div>\r\n                {\r\n                    this.props.isLoggedIn ? <a className=\"logout\" onClick={this.props.handleLogout}>\r\n                        <Icon type=\"logout\" />{' '}Logout\r\n                    </a> : null\r\n                }\r\n            </header>\r\n        );\r\n    }\r\n}\r\n","export const API_ROOT = 'https://around-75015.appspot.com/api/v1';\r\nexport const TOKEN_KEY = 'TOKEN_KEY';\r\nexport const GEO_OPTIONS = {\r\n    enableHighAccuracy: true,\r\n    maximumAge        : 3600000,\r\n    timeout           : 27000\r\n};\r\nexport const POS_KEY = 'POS_KEY';\r\nexport const AUTH_HEADER = 'Bearer';\r\nexport const LOC_SHAKE = 0.02;","import React from 'react';\r\nimport { Form, Input, Button, message } from 'antd';\r\nimport { API_ROOT } from '../constants';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst FormItem = Form.Item;\r\n\r\n\r\nclass RegistrationForm extends React.Component {\r\n    state = {\r\n        confirmDirty: false,\r\n        autoCompleteResult: [],\r\n    };\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.form.validateFieldsAndScroll((err, values) => {\r\n            if (!err) {\r\n                fetch(`${API_ROOT}/signup`, {\r\n                    method: 'POST',\r\n                    body: JSON.stringify({\r\n                        username: values.username,\r\n                        password: values.password,\r\n                    })\r\n                }).then((response) => {\r\n                    if (response.ok) {\r\n                        return response;\r\n                    }\r\n                    throw new Error(response.statusText);\r\n                }).then((response) => response.text())\r\n                    .then((response) => {\r\n                        console.log(response);\r\n                        message.success('Registration Succeed');\r\n                        this.props.history.push('/login');\r\n                    })\r\n                    .catch((e) => {\r\n                        console.log(e)\r\n                        message.error('Registration Failed');\r\n                    });\r\n            }\r\n        });\r\n    }\r\n\r\n    handleConfirmBlur = (e) => {\r\n        const value = e.target.value;\r\n        this.setState({ confirmDirty: this.state.confirmDirty || !!value });\r\n    }\r\n\r\n    compareToFirstPassword = (rule, value, callback) => {\r\n        const form = this.props.form;\r\n        if (value && value !== form.getFieldValue('password')) {\r\n            callback('Two passwords that you enter is inconsistent!');\r\n        } else {\r\n            callback();\r\n        }\r\n    }\r\n\r\n    validateToNextPassword = (rule, value, callback) => {\r\n        const form = this.props.form;\r\n        if (value && this.state.confirmDirty) {\r\n            form.validateFields(['confirm'], { force: true });\r\n        }\r\n        callback();\r\n    }\r\n\r\n    render() {\r\n        const { getFieldDecorator } = this.props.form;\r\n\r\n        const formItemLayout = {\r\n            labelCol: {\r\n                xs: { span: 24 },\r\n                sm: { span: 8 },\r\n            },\r\n            wrapperCol: {\r\n                xs: { span: 24 },\r\n                sm: { span: 16 },\r\n            },\r\n        };\r\n        const tailFormItemLayout = {\r\n            wrapperCol: {\r\n                xs: {\r\n                    span: 24,\r\n                    offset: 0,\r\n                },\r\n                sm: {\r\n                    span: 16,\r\n                    offset: 8,\r\n                },\r\n            },\r\n        };\r\n\r\n        return (\r\n            <Form onSubmit={this.handleSubmit} className=\"register\">\r\n                <FormItem\r\n                    {...formItemLayout}\r\n                    label=\"Username\"\r\n                >\r\n                    {getFieldDecorator('username', {\r\n                        rules: [{ required: true, message: 'Please input your username!', whitespace: false }],\r\n                    })(\r\n                        <Input />\r\n                    )}\r\n                </FormItem>\r\n                <FormItem\r\n                    {...formItemLayout}\r\n                    label=\"Password\"\r\n                >\r\n                    {getFieldDecorator('password', {\r\n                        rules: [{\r\n                            required: true, message: 'Please input your password!',\r\n                        }, {\r\n                            validator: this.validateToNextPassword,\r\n                        }],\r\n                    })(\r\n                        <Input type=\"password\" />\r\n                    )}\r\n                </FormItem>\r\n                <FormItem\r\n                    {...formItemLayout}\r\n                    label=\"Confirm Password\"\r\n                >\r\n                    {getFieldDecorator('confirm', {\r\n                        rules: [{\r\n                            required: true, message: 'Please confirm your password!',\r\n                        }, {\r\n                            validator: this.compareToFirstPassword,\r\n                        }],\r\n                    })(\r\n                        <Input type=\"password\" onBlur={this.handleConfirmBlur} />\r\n                    )}\r\n                </FormItem>\r\n                <FormItem {...tailFormItemLayout}>\r\n                    <Button type=\"primary\" htmlType=\"submit\">Register</Button>\r\n                    <p>I already have an account, go back to <Link to=\"/login\">login</Link></p>\r\n                </FormItem>\r\n            </Form>\r\n        );\r\n    }\r\n}\r\n\r\nexport const Register = Form.create()(RegistrationForm);","import React from 'react';\r\nimport { Form, Icon, Input, Button, message } from 'antd';\r\nimport { Link } from 'react-router-dom';\r\nimport { API_ROOT, TOKEN_KEY } from '../constants';\r\n\r\nconst FormItem = Form.Item;\r\n\r\nclass NormalLoginForm extends React.Component {\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.form.validateFields((err, values) => {\r\n            if (!err) {\r\n                console.log('Received values of form: ', values);\r\n                fetch(`${API_ROOT}/login`, {\r\n                    method: 'POST',\r\n                    body: JSON.stringify({\r\n                        username: values.username,\r\n                        password: values.password,\r\n                    }),\r\n                }).then((response) => {\r\n                    if (response.ok) {\r\n                        return response.text();\r\n                    }\r\n                    throw new Error(response.statusText);\r\n                })\r\n                    .then((data) => {\r\n                        this.props.handleLogin(data);\r\n                        message.success('Login Success.');\r\n                    })\r\n                    .catch((e) => {\r\n                        console.log(e);\r\n                        message.error('Login Failed.');\r\n                    });\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { getFieldDecorator } = this.props.form;\r\n        return (\r\n            <Form onSubmit={this.handleSubmit} className=\"login-form\">\r\n                <FormItem>\r\n                    {getFieldDecorator('username', {\r\n                        rules: [{ required: true, message: 'Please input your username!' }],\r\n                    })(\r\n                        <Input prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />} placeholder=\"Username\" />\r\n                    )}\r\n                </FormItem>\r\n                <FormItem>\r\n                    {getFieldDecorator('password', {\r\n                        rules: [{ required: true, message: 'Please input your Password!' }],\r\n                    })(\r\n                        <Input prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />} type=\"password\" placeholder=\"Password\" />\r\n                    )}\r\n                </FormItem>\r\n                <FormItem>\r\n                    <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\r\n                        Log in\r\n                    </Button>\r\n                    Or <Link to=\"/register\">register now!</Link>\r\n                </FormItem>\r\n            </Form>\r\n        );\r\n    }\r\n}\r\n\r\nexport const Login = Form.create()(NormalLoginForm);","import React, { Component }from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport GridGallery from 'react-grid-gallery';\r\n\r\nexport class Gallery extends Component {\r\n    static propTypes = {\r\n        images: PropTypes.arrayOf(\r\n            PropTypes.shape({\r\n                user: PropTypes.string.isRequired,\r\n                src: PropTypes.string.isRequired,\r\n                thumbnail: PropTypes.string.isRequired,\r\n                caption: PropTypes.string,\r\n                thumbnailWidth: PropTypes.number.isRequired,\r\n                thumbnailHeight: PropTypes.number.isRequired\r\n            })\r\n        ).isRequired\r\n    }\r\n\r\n    render() {\r\n        const images = this.props.images.map((image) => {\r\n            return {\r\n                ...image,\r\n                customOverlay: (\r\n                    <div style={captionStyle}>\r\n                        <div>{`${image.user}: ${image.caption}`}</div>\r\n                    </div>\r\n                ),\r\n            };\r\n        });\r\n\r\n        return (\r\n            <div style={wrapperStyle}>\r\n                <GridGallery\r\n                    backdropClosesModal\r\n                    images={images}\r\n                    enableImageSelection={false}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nconst wrapperStyle = {\r\n    display: \"block\",\r\n    minHeight: \"1px\",\r\n    width: \"100%\",\r\n    border: \"1px solid #ddd\",\r\n    overflow: \"auto\"\r\n};\r\n\r\nconst captionStyle = {\r\n    backgroundColor: \"rgba(0, 0, 0, 0.8)\",\r\n    maxHeight: \"240px\",\r\n    overflow: \"hidden\",\r\n    position: \"absolute\",\r\n    bottom: \"0\",\r\n    width: \"100%\",\r\n    color: \"white\",\r\n    padding: \"2px\",\r\n    fontSize: \"90%\"\r\n};","import React from 'react';\r\nimport { Form, Upload, Icon, Input } from 'antd';\r\n\r\nconst FormItem = Form.Item;\r\n\r\nclass NormalCreatePostForm extends React.Component {\r\n    normFile = (e) => {\r\n        console.log('Upload event:', e);\r\n        if (Array.isArray(e)) {\r\n            return e;\r\n        }\r\n        return e && e.fileList;\r\n    }\r\n\r\n    beforeUpload = () => false\r\n\r\n    render() {\r\n        const { getFieldDecorator } = this.props.form;\r\n        const formItemLayout = {\r\n            labelCol: { span: 6 },\r\n            wrapperCol: { span: 14 },\r\n        };\r\n\r\n        return (\r\n            <Form>\r\n                <FormItem {...formItemLayout} label=\"Message\">\r\n                    {getFieldDecorator('message', {\r\n                        rules: [{\r\n                            required: true,\r\n                            message: 'Please input your message',\r\n                        }],\r\n                    })(\r\n                        <Input placeholder=\"Please input your message\" />\r\n                    )}\r\n                </FormItem>\r\n                <FormItem\r\n                    {...formItemLayout}\r\n                    label=\"Image\"\r\n                >\r\n                    <div className=\"dropbox\">\r\n                        {getFieldDecorator('image', {\r\n                            valuePropName: 'fileList',\r\n                            getValueFromEvent: this.normFile,\r\n                            rules: [{\r\n                                required: true,\r\n                                message: 'Please select an image',\r\n                            }],\r\n                        })(\r\n                            <Upload.Dragger name=\"files\" beforeUpload={this.beforeUpload}>\r\n                                <p className=\"ant-upload-drag-icon\">\r\n                                    <Icon type=\"inbox\" />\r\n                                </p>\r\n                                <p className=\"ant-upload-text\">Click or drag file to this area to upload</p>\r\n                                <p className=\"ant-upload-hint\">Support for a single or bulk upload.</p>\r\n                            </Upload.Dragger>\r\n                        )}\r\n                    </div>\r\n                </FormItem>\r\n            </Form>\r\n        );\r\n    }\r\n}\r\n\r\nexport const CreatePostForm = Form.create()(NormalCreatePostForm);\r\n","import React from 'react';\r\nimport { Modal, Button, message } from 'antd';\r\nimport { CreatePostForm } from './CreatePostForm';\r\nimport { API_ROOT, POS_KEY, TOKEN_KEY, AUTH_HEADER, LOC_SHAKE } from '../constants';\r\n\r\nexport class CreatePostButton extends React.Component {\r\n state = {\r\n   ModalText: 'Content of the modal',\r\n   visible: false,\r\n   confirmLoading: false,\r\n }\r\n\r\n showModal = () => {\r\n   this.setState({\r\n     visible: true,\r\n   });\r\n }\r\n\r\n handleOk = () => {\r\n   this.form.validateFields((err, values) => {\r\n     if (!err) {\r\n       console.log(values);\r\n       const { lat, lon } = JSON.parse(localStorage.getItem(POS_KEY));\r\n       const token = localStorage.getItem(TOKEN_KEY);\r\n       const formData = new FormData();\r\n       formData.set('lat', lat + LOC_SHAKE * Math.random() * 2 - LOC_SHAKE);\r\n       formData.set('lon', lon + LOC_SHAKE * Math.random() * 2 - LOC_SHAKE);\r\n       formData.set('message', values.message);\r\n       formData.set('image', values.image[0].originFileObj);\r\n\r\n       this.setState({ confirmLoading: true });\r\n       fetch(`${API_ROOT}/post`, {\r\n         method: 'POST',\r\n         headers: {\r\n           Authorization: `${AUTH_HEADER} ${token}`,\r\n         },\r\n         body: formData,\r\n       }).then((response) => {\r\n           if (response.ok) {\r\n             this.form.resetFields();\r\n             this.setState({ visible: false, confirmLoading: false });\r\n             return this.props.loadNearbyPosts();\r\n           }\r\n           throw new Error(response.statusText);\r\n         })\r\n         .then(() => message.success('Post created successfully!'))\r\n         .catch((e) => {\r\n           console.log(e);\r\n           this.setState({ confirmLoading: false });\r\n           message.error('Failed to create the post.');\r\n         });\r\n     }\r\n   });\r\n }\r\n\r\n handleCancel = () => {\r\n   console.log('Clicked cancel button');\r\n   this.setState({\r\n     visible: false,\r\n   });\r\n }\r\n\r\n saveFormRef = (formInstance) => {\r\n   this.form = formInstance;\r\n }\r\n\r\n render() {\r\n   const { visible, confirmLoading } = this.state;\r\n   return (\r\n     <div>\r\n       <Button type=\"primary\" onClick={this.showModal}>\r\n         Create New Post\r\n       </Button>\r\n       <Modal title=\"Create New Post\"\r\n              visible={visible}\r\n              onOk={this.handleOk}\r\n              okText=\"Create\"\r\n              confirmLoading={confirmLoading}\r\n              onCancel={this.handleCancel}\r\n       >\r\n         <CreatePostForm ref={this.saveFormRef}/>\r\n       </Modal>\r\n     </div>\r\n   );\r\n }\r\n}\r\n","import React from 'react';\r\nimport { Marker, InfoWindow } from 'react-google-maps';\r\nimport blueMarkerUrl from '../assets/images/blue-marker.svg';\r\n\r\nexport class AroundMarker extends React.Component {\r\n    state = {\r\n        isOpen: false,\r\n    }\r\n\r\n    toggleOpen = () => {\r\n        this.setState((prevState) => {\r\n            return {\r\n                isOpen: !prevState.isOpen\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { user, message, url, location, type } = this.props.post;\r\n        const { lat, lon : lng } = location;\r\n        const isImagePost = type === 'image';\r\n        const icon = isImagePost ? undefined : {\r\n            url: blueMarkerUrl,\r\n            scaledSize: new window.google.maps.Size(26, 41),\r\n        }\r\n        return (\r\n            <Marker\r\n                position={{ lat, lng }}\r\n                onMouseOver={isImagePost ? this.toggleOpen : undefined}\r\n                onMouseOut={isImagePost ? this.toggleOpen : undefined}\r\n                onClick={isImagePost ? undefined : this.toggleOpen}\r\n                icon={icon}\r\n            >\r\n                {this.state.isOpen ? (\r\n                    <InfoWindow onCloseClick={this.toggleOpen}>\r\n                        <div>\r\n                            {isImagePost ?\r\n                                <img src={url} alt={message} className=\"around-marker-image\"/>\r\n                                :\r\n                                <video src={url} className=\"around-marker-video\" controls/>\r\n                            }\r\n\r\n                            <p>{`${user}: ${message}`}</p>\r\n                        </div>\r\n                    </InfoWindow>\r\n                ) : null}\r\n            </Marker>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport {\r\n    withScriptjs,\r\n    withGoogleMap,\r\n    GoogleMap,\r\n} from \"react-google-maps\";\r\nimport { AroundMarker } from './AroundMarker';\r\nimport { POS_KEY } from '../constants';\r\n\r\nclass NormalAroundMap extends React.Component {\r\n    reloadMarkers = () => {\r\n        const center = this.getCenter();\r\n        const radius = this.getRadius();\r\n        if (this.props.topic === 'around') {\r\n            this.props.loadNearbyPosts(center, radius);\r\n        } else {\r\n            this.props.loadFacesAroundTheWorld();\r\n        }\r\n    }\r\n\r\n    getCenter = () => {\r\n        const center = this.map.getCenter();\r\n        return { lat: center.lat(), lon: center.lng() }\r\n    }\r\n\r\n    getRadius = () => {\r\n        const center = this.map.getCenter();\r\n        const bounds = this.map.getBounds();\r\n        if (center && bounds) {\r\n            const ne = bounds.getNorthEast();\r\n            const right = new window.google.maps.LatLng(center.lat(), ne.lng());\r\n            return 0.001 * window.google.maps.geometry.spherical.computeDistanceBetween(center, right);\r\n        }\r\n    }\r\n\r\n    getMapRef = (mapInstance) => {\r\n        this.map = mapInstance;\r\n    }\r\n\r\n    render() {\r\n        const { lat, lon : lng } = JSON.parse(localStorage.getItem(POS_KEY));\r\n        return (\r\n            <GoogleMap\r\n                ref={this.getMapRef}\r\n                defaultZoom={11}\r\n                defaultCenter={{ lat, lng }}\r\n                onDragEnd={this.reloadMarkers}\r\n                onZoomChanged={this.reloadMarkers}\r\n            >\r\n                {this.props.posts.map((post) => <AroundMarker post={post} key={post.url}/>)}\r\n            </GoogleMap>\r\n        );\r\n    }\r\n}\r\n\r\nexport const AroundMap = withScriptjs(withGoogleMap(NormalAroundMap));","import React from 'react';\r\nimport { Tabs, Spin, Row, Col, Radio } from 'antd';\r\nimport { GEO_OPTIONS, POS_KEY, API_ROOT, AUTH_HEADER, TOKEN_KEY } from '../constants';\r\nimport { Gallery } from './Gallery';\r\nimport { CreatePostButton } from './CreatePostButton';\r\nimport { AroundMap } from './AroundMap';\r\n\r\nconst TabPane = Tabs.TabPane;\r\nconst RadioGroup = Radio.Group;\r\n\r\nexport class Home extends React.Component {\r\n    state = {\r\n        isLoadingGeoLocation: false,\r\n        error: '',\r\n        isLoadingPosts: false,\r\n        posts: [],\r\n        topic: 'around',\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (\"geolocation\" in navigator) {\r\n            this.setState({ isLoadingGeoLocation: true, error: '' });\r\n            navigator.geolocation.getCurrentPosition(\r\n                this.onSuccessLoadGeoLocation,\r\n                this.onFailedLoadGeoLocation,\r\n                GEO_OPTIONS);\r\n        } else {\r\n            this.setState({ error: 'Geolocation is not supported.'});\r\n        }\r\n    }\r\n\r\n    onSuccessLoadGeoLocation = (position) => {\r\n        console.log(position);\r\n        const { latitude, longitude } = position.coords;\r\n        localStorage.setItem(POS_KEY, JSON.stringify({ lat: latitude, lon: longitude }));\r\n        this.setState({ isLoadingGeoLocation: false });\r\n        this.loadNearbyPosts();\r\n    }\r\n\r\n    onFailedLoadGeoLocation = () => {\r\n        this.setState({ isLoadingGeoLocation: false, error: 'Failed to load geolocation.' });\r\n    }\r\n\r\n    loadNearbyPosts = (center, radius) => {\r\n        const { lat, lon } = center ? center : JSON.parse(localStorage.getItem(POS_KEY));\r\n        const range = radius ? radius : 20;\r\n        const token = localStorage.getItem(TOKEN_KEY);\r\n        this.setState({ isLoadingPosts: true, error: '' });\r\n        return fetch(`${API_ROOT}/search?lat=${lat}&lon=${lon}&range=${range}`, {\r\n            method: 'GET',\r\n            headers: {\r\n                Authorization: `${AUTH_HEADER} ${token}`,\r\n            },\r\n        }).then((response) => {\r\n            if (response.ok) {\r\n                return response.json();\r\n            }\r\n            throw new Error('Failed to load posts.');\r\n        }).then((data) => {\r\n            console.log(data);\r\n            this.setState({ isLoadingPosts: false, posts: data ? data : [] });\r\n        }).catch((e) => {\r\n            console.log(e.message);\r\n            this.setState({ isLoadingPosts: false, error: e.message });\r\n        });\r\n    }\r\n\r\n    getPanelContent = (type) => {\r\n        const { error, isLoadingGeoLocation, isLoadingPosts, posts } = this.state;\r\n        if (error) {\r\n            return <div>{error}</div>\r\n        } else if(isLoadingGeoLocation) {\r\n            return <Spin tip=\"Loading geo location...\"/>\r\n        } else if (isLoadingPosts) {\r\n            return <Spin tip=\"Loading posts...\" />\r\n        } else if (posts.length > 0) {\r\n            return type === 'image' ? this.getImagePosts() : this.getVideoPosts();\r\n        } else {\r\n            return 'No nearby posts.';\r\n        }\r\n    }\r\n\r\n    getVideoPosts = () => {\r\n        return (\r\n            <Row gutter={32}>\r\n                {this.state.posts.filter((post) => post.type === 'video').map((post) => {\r\n                    return (\r\n                        <Col span={6} key={post.url}>\r\n                            <video src={post.url} controls className=\"video-block\"/>\r\n                            <p>{post.user}: {post.message}</p>\r\n                        </Col>\r\n                    );\r\n                })}\r\n            </Row>\r\n        );\r\n    }\r\n\r\n    getImagePosts = () => {\r\n        const images = this.state.posts\r\n            .filter((post) => post.type === 'image')\r\n            .map((post) => {\r\n                return {\r\n                    user: post.user,\r\n                    src: post.url,\r\n                    thumbnail: post.url,\r\n                    caption: post.message,\r\n                    thumbnailWidth: 400,\r\n                    thumbnailHeight: 300,\r\n                }\r\n            });\r\n\r\n        return (<Gallery images={images}/>);\r\n    }\r\n\r\n    onTopicChange = (e) => {\r\n        const topic = e.target.value;\r\n        this.setState({ topic });\r\n        if (topic === 'around') {\r\n            this.loadNearbyPosts();\r\n        } else {\r\n            this.loadFacesAroundTheWorld();\r\n        }\r\n    }\r\n\r\n    loadFacesAroundTheWorld = () => {\r\n        const token = localStorage.getItem(TOKEN_KEY);\r\n        this.setState({ isLoadingPosts: true, error: '' });\r\n        fetch(`${API_ROOT}/cluster?term=face`, {\r\n            method: 'GET',\r\n            headers: {\r\n                Authorization: `${AUTH_HEADER} ${token}`,\r\n            },\r\n        }).then((response) => {\r\n            if (response.ok) {\r\n                return response.json();\r\n            }\r\n            throw new Error(response.statusText);\r\n        })\r\n            .then((data) => {\r\n                console.log(data);\r\n                this.setState({ isLoadingPosts: false, posts: data ? data : [] });\r\n            })\r\n            .catch((e) => {\r\n                console.log(e);\r\n                this.setState({ isLoadingPosts: false, error: 'Loading face images failed.'});\r\n            });\r\n    }\r\n\r\n    render() {\r\n        const operations = <CreatePostButton loadNearbyPosts={this.loadNearbyPosts}/>;\r\n        return (\r\n            <div className=\"home\">\r\n                <RadioGroup onChange={this.onTopicChange} value={this.state.topic} className=\"topic-radio-group\">\r\n                    <Radio value=\"around\">Posts Around Me</Radio>\r\n                    <Radio value=\"face\">Faces Around The World</Radio>\r\n                </RadioGroup>\r\n                <Tabs tabBarExtraContent={operations} className=\"main-tabs\">\r\n                    <TabPane tab=\"Image Posts\" key=\"1\">\r\n                        {this.getPanelContent('image')}\r\n                    </TabPane>\r\n                    <TabPane tab=\"Video Posts\" key=\"2\">\r\n                        {this.getPanelContent('video')}\r\n                    </TabPane>\r\n                    <TabPane tab=\"Map\" key=\"3\">\r\n                        <AroundMap\r\n                            googleMapURL=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyD3CEh9DXuyjozqptVB5LA-dN7MxWWkr9s&v=3.exp&libraries=geometry,drawing,places\"\r\n                            loadingElement={<div style={{ height: `100%` }} />}\r\n                            containerElement={<div style={{ height: `800px` }} />}\r\n                            mapElement={<div style={{ height: `100%` }} />}\r\n                            posts={this.state.posts}\r\n                            loadNearbyPosts={this.loadNearbyPosts}\r\n                            loadFacesAroundTheWorld={this.loadFacesAroundTheWorld}\r\n                            topic={this.state.topic}\r\n                        />\r\n                    </TabPane>\r\n                </Tabs>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport { Register } from './Register';\r\nimport { Login } from './Login';\r\nimport { Home } from './Home';\r\nimport { Switch, Route, Redirect } from 'react-router-dom';\r\n\r\nexport class Main extends React.Component {\r\n    getHome = () => {\r\n        return this.props.isLoggedIn ? <Home/> : <Redirect to=\"/login\"/>;\r\n    }\r\n\r\n    getLogin = () => {\r\n        return this.props.isLoggedIn ? <Redirect to=\"/home\"/> : <Login handleLogin={this.props.handleLogin}/>;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"main\">\r\n                <Switch>\r\n                    <Route exact path=\"/\" render={this.getLogin}/>\r\n                    <Route path=\"/login\" render={this.getLogin}/>\r\n                    <Route path=\"/register\" component={Register}/>\r\n                    <Route path=\"/home\" render={this.getHome}/>\r\n                    <Route render={this.getLogin}/>\r\n                </Switch>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { TopBar } from './TopBar';\r\nimport { Main } from './Main';\r\nimport { TOKEN_KEY } from '../constants';\r\n\r\nclass App extends Component {\r\n    state = {\r\n        isLoggedIn: Boolean(localStorage.getItem(TOKEN_KEY)),\r\n    }\r\n\r\n    handleLogin = (token) => {\r\n        localStorage.setItem(TOKEN_KEY, token);\r\n        this.setState({ isLoggedIn: true });\r\n    }\r\n\r\n    handleLogout = () => {\r\n        localStorage.removeItem(TOKEN_KEY);\r\n        this.setState({ isLoggedIn: false });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"App\">\r\n                <TopBar isLoggedIn={this.state.isLoggedIn} handleLogout={this.handleLogout}/>\r\n                <Main isLoggedIn={this.state.isLoggedIn} handleLogin={this.handleLogin}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nReactDOM.render(\r\n    <BrowserRouter>\r\n        <App />\r\n    </BrowserRouter>,\r\n    document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();"],"sourceRoot":""}